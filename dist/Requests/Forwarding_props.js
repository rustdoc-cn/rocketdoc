
export default {
    'sidebar': [{ "text": "Rocket编程指南", "link": "", "pagePath": "README.md" }, { "text": "简介", "children": [{ "text": "读者", "link": "Introduction/Audience.html", "pagePath": "Introduction/Audience.md" }, { "text": "前言", "link": "Introduction/Foreword.html", "pagePath": "Introduction/Foreword.md" }] }, { "text": "快速开始", "children": [{ "text": "运行示例", "link": "Quickstart/Running-Examples.html", "pagePath": "Quickstart/Running-Examples.md" }] }, { "text": "入门", "children": [{ "text": "安装 Rust", "link": "Getting-Started/Installing-Rust.html", "pagePath": "Getting-Started/Installing-Rust.md" }, { "text": "你好，世界！", "link": "Getting-Started/Hello-World.html", "pagePath": "Getting-Started/Hello-World.md" }] }, { "text": "概述", "children": [{ "text": "生命周期", "link": "Overview/Lifecycle.html", "pagePath": "Overview/Lifecycle.md" }, { "text": "路由", "link": "Overview/Routing.html", "pagePath": "Overview/Routing.md" }, { "text": "挂载", "link": "Overview/Mounting.html", "pagePath": "Overview/Mounting.md" }, { "text": "启动", "link": "Overview/Launching.html", "pagePath": "Overview/Launching.md" }] }, { "text": "请求 Requests", "children": [{ "text": "方法", "link": "Requests/Methods.html", "pagePath": "Requests/Methods.md" }, { "text": "动态路径", "link": "Requests/Dynamic-Paths.html", "pagePath": "Requests/Dynamic-Paths.md" }, { "text": "匹配转发", "link": "Requests/Forwarding.html", "pagePath": "Requests/Forwarding.md" }, { "text": "查询字符串", "link": "Requests/Query-Strings.html", "pagePath": "Requests/Query-Strings.md" }, { "text": "请求防护", "link": "Requests/Request-Guards.html", "pagePath": "Requests/Request-Guards.md" }, { "text": "Cookies", "link": "Requests/Cookies.html", "pagePath": "Requests/Cookies.md" }, { "text": "格式", "link": "Requests/Format.html", "pagePath": "Requests/Format.md" }, { "text": "正文数据", "link": "Requests/Body-Data.html", "pagePath": "Requests/Body-Data.md" }, { "text": "你好，世界！", "link": "Requests/Error-Catchers.html", "pagePath": "Requests/Error-Catchers.md" }] }, { "text": "响应 Responses", "children": [{ "text": "响应器", "link": "Responses/Responder.html", "pagePath": "Responses/Responder.md" }, { "text": "自定义响应器", "link": "Responses/Custom-Responders.html", "pagePath": "Responses/Custom-Responders.md" }, { "text": "实现响应器", "link": "Responses/Implementations.html", "pagePath": "Responses/Implementations.md" }, { "text": "Rocket响应器", "link": "Responses/Rocket-Responders.html", "pagePath": "Responses/Rocket-Responders.md" }, { "text": "模板", "link": "Responses/Templates.html", "pagePath": "Responses/Templates.md" }, { "text": "类型化Uri", "link": "Responses/Typed-URIs.html", "pagePath": "Responses/Typed-URIs.md" }] }, { "text": "状态 State", "children": [{ "text": "管理状态", "link": "State/Managed-State.html", "pagePath": "State/Managed-State.md" }, { "text": "请求本地状态", "link": "State/Request-Local-State.html", "pagePath": "State/Request-Local-State.md" }, { "text": "数据库", "link": "State/Databases.html", "pagePath": "State/Databases.md" }] }, { "text": "整流罩 Fairings", "children": [{ "text": "概述", "link": "Fairings/Overview.html", "pagePath": "Fairings/Overview.md" }, { "text": "实现", "link": "Fairings/Implementing.html", "pagePath": "Fairings/Implementing.md" }, { "text": "临时 Fairings", "link": "Fairings/Ad-Hoc-Fairings.html", "pagePath": "Fairings/Ad-Hoc-Fairings.md" }] }, { "text": "测试", "children": [{ "text": "本地调试", "link": "Testing/Local-Dispatching.html", "pagePath": "Testing/Local-Dispatching.md" }, { "text": "验证响应", "link": "Testing/Validating-Responses.html", "pagePath": "Testing/Validating-Responses.md" }, { "text": "测试 Hello World！", "link": "Testing/Testing-Hello-World.html", "pagePath": "Testing/Testing-Hello-World.md" }, { "text": "代码生成调试", "link": "Testing/Codegen-Debug.html", "pagePath": "Testing/Codegen-Debug.md" }] }, { "text": "配置", "children": [{ "text": "环境", "link": "Configuration/Environment.html", "pagePath": "Configuration/Environment.md" }, { "text": "Rocket配置文件", "link": "Configuration/Rocket.toml.html", "pagePath": "Configuration/Rocket.toml.md" }, { "text": "数据限制", "link": "Configuration/Data-Limits.html", "pagePath": "Configuration/Data-Limits.md" }, { "text": "附加功能", "link": "Configuration/Extras.html", "pagePath": "Configuration/Extras.md" }, { "text": "环境变量", "link": "Configuration/Environment-Variables.html", "pagePath": "Configuration/Environment-Variables.md" }, { "text": "程式化", "link": "Configuration/Programmatic.html", "pagePath": "Configuration/Programmatic.md" }, { "text": "配置TLS", "link": "Configuration/Configuring-TLS.html", "pagePath": "Configuration/Configuring-TLS.md" }] }, { "text": "Pastebin 教程", "children": [{ "text": "成品", "link": "Pastebin/Finished-Product.html", "pagePath": "Pastebin/Finished-Product.md" }, { "text": "入门", "link": "Pastebin/Getting-Started.html", "pagePath": "Pastebin/Getting-Started.md" }, { "text": "主页", "link": "Pastebin/Index.html", "pagePath": "Pastebin/Index.md" }, { "text": "上传", "link": "Pastebin/Uploading.html", "pagePath": "Pastebin/Uploading.md" }, { "text": "检索粘贴", "link": "Pastebin/Retrieving-Pastes.html", "pagePath": "Pastebin/Retrieving-Pastes.md" }, { "text": "总结", "link": "Pastebin/Conclusion.html", "pagePath": "Pastebin/Conclusion.md" }] }, { "text": "总结", "children": [{ "text": "获取帮助", "link": "Conclusion/Getting-Help.html", "pagePath": "Conclusion/Getting-Help.md" }, { "text": "下一步是什么？", "link": "Conclusion/Whats-Next.html", "pagePath": "Conclusion/Whats-Next.md" }] }],
    'prev': { "text": "动态路径", "link": "Requests/Dynamic-Paths.html", "pagePath": "Requests/Dynamic-Paths.md" },
    'next': { "text": "查询字符串", "link": "Requests/Query-Strings.html", "pagePath": "Requests/Query-Strings.md" },
    'config': { "srcDir": "source/_posts", "outDir": "dist", "exclude": ["**/.*", "markdoc.config.json", "LICENSE", "dist"], "baseDir": "/rocketdoc/", "watch": false, "serve": true, "addr": "127.0.0.1:8096", "title": "ROCKET指南", "nav": [{ "text": "首页", "link": "" }], "sidebar": ["README.md", { "text": "简介", "children": ["Introduction/Audience.md", "Introduction/Foreword.md"] }, { "text": "快速开始", "children": ["Quickstart/Running-Examples.md"] }, { "text": "入门", "children": ["Getting-Started/Installing-Rust.md", "Getting-Started/Hello-World.md"] }, { "text": "概述", "children": ["Overview/Lifecycle.md", "Overview/Routing.md", "Overview/Mounting.md", "Overview/Launching.md"] }, { "text": "请求 Requests", "children": ["Requests/Methods.md", "Requests/Dynamic-Paths.md", "Requests/Forwarding.md", "Requests/Query-Strings.md", "Requests/Request-Guards.md", "Requests/Cookies.md", "Requests/Format.md", "Requests/Body-Data.md", "Requests/Error-Catchers.md"] }, { "text": "响应 Responses", "children": ["Responses/Responder.md", "Responses/Custom-Responders.md", "Responses/Implementations.md", "Responses/Rocket-Responders.md", "Responses/Templates.md", "Responses/Typed-URIs.md"] }, { "text": "状态 State", "children": ["State/Managed-State.md", "State/Request-Local-State.md", "State/Databases.md"] }, { "text": "整流罩 Fairings", "children": ["Fairings/Overview.md", "Fairings/Implementing.md", "Fairings/Ad-Hoc-Fairings.md"] }, { "text": "测试", "children": ["Testing/Local-Dispatching.md", "Testing/Validating-Responses.md", "Testing/Testing-Hello-World.md", "Testing/Codegen-Debug.md"] }, { "text": "配置", "children": ["Configuration/Environment.md", "Configuration/Rocket.toml.md", "Configuration/Data-Limits.md", "Configuration/Extras.md", "Configuration/Environment-Variables.md", "Configuration/Programmatic.md", "Configuration/Configuring-TLS.md"] }, { "text": "Pastebin 教程", "children": ["Pastebin/Finished-Product.md", "Pastebin/Getting-Started.md", "Pastebin/Index.md", "Pastebin/Uploading.md", "Pastebin/Retrieving-Pastes.md", "Pastebin/Conclusion.md"] }, { "text": "总结", "children": ["Conclusion/Getting-Help.md", "Conclusion/Whats-Next.md"] }] },
    'pagePath': "Requests/Forwarding.md",
    'layoutPath': "_layout.tsx",
    'outputPath': "Requests/Forwarding.html",
    'title': "匹配转发",
    'content': React.createElement("article", { dangerouslySetInnerHTML: {
            __html: '<h2 id="匹配转发">匹配转发<a class="anchor" href="Requests/Forwarding.html#匹配转发">§</a></h2>\n<p>让我们从前面的示例中更仔细地看一下route属性和签名对：</p>\n<pre class="language-rust"><code class="language-rust"><span class="token attribute attr-name">#[get(<span class="token string">"/hello/&lt;name>/&lt;age>/&lt;cool>"</span>)]</span>\n<span class="token keyword">fn</span> <span class="token function-definition function">hello</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> String<span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token keyword">u8</span><span class="token punctuation">,</span> cool<span class="token punctuation">:</span> <span class="token keyword">bool</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> String <span class="token punctuation">{</span> <span class="token punctuation">...</span> <span class="token punctuation">}</span>\n</code></pre>\n<p>如果 <code>cool</code> 不是 <code>bool</code>怎么办？或者，如果 <code>age</code> 不是 <code>u8</code> 怎么办？当参数类型发生不匹配时，Rocket将请求转发到下一个匹配的路由（如果有）。这将一直持续，直到路由没有转发请求或没有剩余的路由可供尝试。如果没有剩余的路由，则返回可自定义的404错误。</p>\n<p>路由尝试以递增的顺序进行。Rocket选择一个从-6到-1的默认排名，在下一节中将详细介绍，但是也可以使用rank属性手动设置路由的排名。为了说明这一点，请参考以下路由：</p>\n<pre class="language-rust"><code class="language-rust"><span class="token attribute attr-name">#[get(<span class="token string">"/user/&lt;id>"</span>)]</span>\n<span class="token keyword">fn</span> <span class="token function-definition function">user</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> T <span class="token punctuation">{</span> <span class="token punctuation">...</span> <span class="token punctuation">}</span>\n\n<span class="token attribute attr-name">#[get(<span class="token string">"/user/&lt;id>"</span>, rank = 2)]</span>\n<span class="token keyword">fn</span> <span class="token function-definition function">user_int</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token keyword">isize</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> T <span class="token punctuation">{</span> <span class="token punctuation">...</span> <span class="token punctuation">}</span>\n\n<span class="token attribute attr-name">#[get(<span class="token string">"/user/&lt;id>"</span>, rank = 3)]</span>\n<span class="token keyword">fn</span> <span class="token function-definition function">user_str</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token operator">&amp;</span>RawStr<span class="token punctuation">)</span> <span class="token punctuation">-></span> T <span class="token punctuation">{</span> <span class="token punctuation">...</span> <span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    rocket<span class="token punctuation">::</span><span class="token function">ignite</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token macro property">routes!</span><span class="token punctuation">[</span>user<span class="token punctuation">,</span> user_int<span class="token punctuation">,</span> user_str<span class="token punctuation">]</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>可以看到在函数<code>user_int</code>和<code>user_str</code>都设置了<code>rank</code>参数。如果我们把这几个路由挂载到根路径下，运行程序之后，向<code>/user/</code>的请求，会按照以下的规则去匹配：</p>\n<ol>\n<li>该<code>user</code>路线首先匹配。如果该<code>&lt;id&gt;</code>位置的字符串是无符号整数，则将调用<code>user</code>处理程序。如果不是，则将请求转发到下一个匹配的路由：<code>user_int</code>。</li>\n<li>用户输入的路由与下一个匹配。如果<code>&lt;id&gt;</code>是有符号整数，则调用<code>user_int</code>。否则，请求将被转发。</li>\n<li>用户路径最后匹配。因为<code>&lt;id&gt;</code>总是一个字符串，所以路由总是匹配的。调用<code>user_str</code>处理程序。</li>\n</ol>\n<h3 id="注在启动过程中一条路由的等级显示在括号中">注：在启动过程中，一条路由的等级显示在[括号]中。<a class="anchor" href="Requests/Forwarding.html#注在启动过程中一条路由的等级显示在括号中">§</a></h3>\n<p>在应用程序启动期间，您还可以在方括号中找到路由的排名：<code>GET/user/&lt;id&gt;[3]（user_str）</code>。</p>\n<p>可以使用 <code>Result</code> 或 <code>Option</code> 类型捕获转发。例如，如果用户函数中的<code>id</code>类型是<code>Result&lt;usize，&amp;RawStr&gt;</code>，则<code>user</code>永远不会转发。<code>Ok</code>表示<code>&lt;id&gt;</code>是有效的<code>usize</code>，而<code>Err</code>表示<code>&lt;id&gt;</code>不是<code>usize</code>。<code>Err</code>的值应该包含无法解析为<code>usize</code>的字符串。</p>\n<h3 id="提示不仅转发可以被捕获">提示：不仅转发可以被捕获！<a class="anchor" href="Requests/Forwarding.html#提示不仅转发可以被捕获">§</a></h3>\n<p>通常，当任何防护措施由于任何原因而失败时，包括参数防护措施，都可以在其位置使用<code>Option</code>或<code>Result</code>键入以捕获失败。</p>\n<p>顺便说一句，如果您要去掉<code>user_str</code>或<code>user_int</code>路由中的<code>rank</code>参数，Rocket将会发出错误并中止启动，表明路由<em>发生冲突</em>，或者可以与相似的传入请求匹配。<code>rank</code>参数可解决此冲突。</p>\n<h3 id="默认排序">默认排序<a class="anchor" href="Requests/Forwarding.html#默认排序">§</a></h3>\n<p>如果未明确指定等级，则Rocket会分配默认等级。默认情况下，具有静态路径和查询字符串的路由具有较低的等级（较高的优先级），而具有动态路径和没有查询字符串的路由具有较高的等级（较低的优先级）。下表根据给定的属性描述了路由的默认排序。</p>\n<table>\n<thead>\n<tr>\n<th>静态路径</th>\n<th>查询参数（query)</th>\n<th>rank</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>是</td>\n<td>部分静态</td>\n<td>-6</td>\n<td><code>/hello?world=true</code></td>\n</tr>\n<tr>\n<td>是</td>\n<td>完全动态</td>\n<td>-5</td>\n<td><code>/hello/?&lt;world&gt;</code></td>\n</tr>\n<tr>\n<td>是</td>\n<td>无</td>\n<td>-4</td>\n<td><code>/hello</code></td>\n</tr>\n<tr>\n<td>否</td>\n<td>部分静态</td>\n<td>-3</td>\n<td><code>/&lt;hi&gt;?world=true</code></td>\n</tr>\n<tr>\n<td>否</td>\n<td>完全动态</td>\n<td>-2</td>\n<td><code>/&lt;hi&gt;?&lt;world&gt;</code></td>\n</tr>\n<tr>\n<td>否</td>\n<td>无</td>\n<td>-1</td>\n<td><code>/&lt;hi&gt;</code></td>\n</tr>\n</tbody>\n</table>'
        } }),
    'script': React.createElement(React.Fragment, null,
        React.createElement("script", { crossOrigin: "anonymous", src: "https://unpkg.com/react@16.13.1/umd/react.production.min.js" }),
        React.createElement("script", { crossOrigin: "anonymous", src: "https://unpkg.com/react-dom@16.13.1/umd/react-dom.production.min.js" }),
        React.createElement("script", { src: "index.js" })),
    'toc': React.createElement("aside", { dangerouslySetInnerHTML: {
            __html: '<nav class="toc"><ol><li><a href="Requests/Forwarding.html#匹配转发">匹配转发</a><ol><li><a href="Requests/Forwarding.html#注在启动过程中一条路由的等级显示在括号中">注：在启动过程中，一条路由的等级显示在[括号]中。</a></li><li><a href="Requests/Forwarding.html#提示不仅转发可以被捕获">提示：不仅转发可以被捕获！</a></li><li><a href="Requests/Forwarding.html#默认排序">默认排序</a></li></ol></li></ol></nav>'
        } }),
    'layout': "default",
    'id': "Forwarding"
};
