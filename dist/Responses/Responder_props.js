
export default {
    'sidebar': [{ "text": "Rocket编程指南", "link": "", "pagePath": "README.md" }, { "text": "简介", "children": [{ "text": "读者", "link": "Introduction/Audience.html", "pagePath": "Introduction/Audience.md" }, { "text": "前言", "link": "Introduction/Foreword.html", "pagePath": "Introduction/Foreword.md" }] }, { "text": "快速开始", "children": [{ "text": "运行示例", "link": "Quickstart/Running-Examples.html", "pagePath": "Quickstart/Running-Examples.md" }] }, { "text": "入门", "children": [{ "text": "安装 Rust", "link": "Getting-Started/Installing-Rust.html", "pagePath": "Getting-Started/Installing-Rust.md" }, { "text": "你好，世界！", "link": "Getting-Started/Hello-World.html", "pagePath": "Getting-Started/Hello-World.md" }] }, { "text": "概述", "children": [{ "text": "生命周期", "link": "Overview/Lifecycle.html", "pagePath": "Overview/Lifecycle.md" }, { "text": "路由", "link": "Overview/Routing.html", "pagePath": "Overview/Routing.md" }, { "text": "挂载", "link": "Overview/Mounting.html", "pagePath": "Overview/Mounting.md" }, { "text": "启动", "link": "Overview/Launching.html", "pagePath": "Overview/Launching.md" }] }, { "text": "请求 Requests", "children": [{ "text": "方法", "link": "Requests/Methods.html", "pagePath": "Requests/Methods.md" }, { "text": "动态路径", "link": "Requests/Dynamic-Paths.html", "pagePath": "Requests/Dynamic-Paths.md" }, { "text": "匹配转发", "link": "Requests/Forwarding.html", "pagePath": "Requests/Forwarding.md" }, { "text": "查询字符串", "link": "Requests/Query-Strings.html", "pagePath": "Requests/Query-Strings.md" }, { "text": "请求防护", "link": "Requests/Request-Guards.html", "pagePath": "Requests/Request-Guards.md" }, { "text": "Cookies", "link": "Requests/Cookies.html", "pagePath": "Requests/Cookies.md" }, { "text": "格式", "link": "Requests/Format.html", "pagePath": "Requests/Format.md" }, { "text": "正文数据", "link": "Requests/Body-Data.html", "pagePath": "Requests/Body-Data.md" }, { "text": "你好，世界！", "link": "Requests/Error-Catchers.html", "pagePath": "Requests/Error-Catchers.md" }] }, { "text": "响应 Responses", "children": [{ "text": "响应器", "link": "Responses/Responder.html", "pagePath": "Responses/Responder.md" }, { "text": "自定义响应器", "link": "Responses/Custom-Responders.html", "pagePath": "Responses/Custom-Responders.md" }, { "text": "实现响应器", "link": "Responses/Implementations.html", "pagePath": "Responses/Implementations.md" }, { "text": "Rocket响应器", "link": "Responses/Rocket-Responders.html", "pagePath": "Responses/Rocket-Responders.md" }, { "text": "模板", "link": "Responses/Templates.html", "pagePath": "Responses/Templates.md" }, { "text": "类型化Uri", "link": "Responses/Typed-URIs.html", "pagePath": "Responses/Typed-URIs.md" }] }, { "text": "状态 State", "children": [{ "text": "管理状态", "link": "State/Managed-State.html", "pagePath": "State/Managed-State.md" }, { "text": "请求本地状态", "link": "State/Request-Local-State.html", "pagePath": "State/Request-Local-State.md" }, { "text": "数据库", "link": "State/Databases.html", "pagePath": "State/Databases.md" }] }, { "text": "整流罩 Fairings", "children": [{ "text": "概述", "link": "Fairings/Overview.html", "pagePath": "Fairings/Overview.md" }, { "text": "实现", "link": "Fairings/Implementing.html", "pagePath": "Fairings/Implementing.md" }, { "text": "临时 Fairings", "link": "Fairings/Ad-Hoc-Fairings.html", "pagePath": "Fairings/Ad-Hoc-Fairings.md" }] }, { "text": "测试", "children": [{ "text": "本地调试", "link": "Testing/Local-Dispatching.html", "pagePath": "Testing/Local-Dispatching.md" }, { "text": "验证响应", "link": "Testing/Validating-Responses.html", "pagePath": "Testing/Validating-Responses.md" }, { "text": "测试 Hello World！", "link": "Testing/Testing-Hello-World.html", "pagePath": "Testing/Testing-Hello-World.md" }, { "text": "代码生成调试", "link": "Testing/Codegen-Debug.html", "pagePath": "Testing/Codegen-Debug.md" }] }, { "text": "配置", "children": [{ "text": "环境", "link": "Configuration/Environment.html", "pagePath": "Configuration/Environment.md" }, { "text": "Rocket配置文件", "link": "Configuration/Rocket.toml.html", "pagePath": "Configuration/Rocket.toml.md" }, { "text": "数据限制", "link": "Configuration/Data-Limits.html", "pagePath": "Configuration/Data-Limits.md" }, { "text": "附加功能", "link": "Configuration/Extras.html", "pagePath": "Configuration/Extras.md" }, { "text": "环境变量", "link": "Configuration/Environment-Variables.html", "pagePath": "Configuration/Environment-Variables.md" }, { "text": "程式化", "link": "Configuration/Programmatic.html", "pagePath": "Configuration/Programmatic.md" }, { "text": "配置TLS", "link": "Configuration/Configuring-TLS.html", "pagePath": "Configuration/Configuring-TLS.md" }] }, { "text": "Pastebin 教程", "children": [{ "text": "成品", "link": "Pastebin/Finished-Product.html", "pagePath": "Pastebin/Finished-Product.md" }, { "text": "入门", "link": "Pastebin/Getting-Started.html", "pagePath": "Pastebin/Getting-Started.md" }, { "text": "主页", "link": "Pastebin/Index.html", "pagePath": "Pastebin/Index.md" }, { "text": "上传", "link": "Pastebin/Uploading.html", "pagePath": "Pastebin/Uploading.md" }, { "text": "检索粘贴", "link": "Pastebin/Retrieving-Pastes.html", "pagePath": "Pastebin/Retrieving-Pastes.md" }, { "text": "总结", "link": "Pastebin/Conclusion.html", "pagePath": "Pastebin/Conclusion.md" }] }, { "text": "总结", "children": [{ "text": "获取帮助", "link": "Conclusion/Getting-Help.html", "pagePath": "Conclusion/Getting-Help.md" }, { "text": "下一步是什么？", "link": "Conclusion/Whats-Next.html", "pagePath": "Conclusion/Whats-Next.md" }] }],
    'prev': { "text": "你好，世界！", "link": "Requests/Error-Catchers.html", "pagePath": "Requests/Error-Catchers.md" },
    'next': { "text": "自定义响应器", "link": "Responses/Custom-Responders.html", "pagePath": "Responses/Custom-Responders.md" },
    'config': { "srcDir": "source/_posts", "outDir": "dist", "exclude": ["**/.*", "markdoc.config.json", "LICENSE", "dist"], "baseDir": "/rocketdoc/", "watch": false, "serve": true, "addr": "127.0.0.1:8096", "title": "ROCKET指南", "nav": [{ "text": "首页", "link": "" }], "sidebar": ["README.md", { "text": "简介", "children": ["Introduction/Audience.md", "Introduction/Foreword.md"] }, { "text": "快速开始", "children": ["Quickstart/Running-Examples.md"] }, { "text": "入门", "children": ["Getting-Started/Installing-Rust.md", "Getting-Started/Hello-World.md"] }, { "text": "概述", "children": ["Overview/Lifecycle.md", "Overview/Routing.md", "Overview/Mounting.md", "Overview/Launching.md"] }, { "text": "请求 Requests", "children": ["Requests/Methods.md", "Requests/Dynamic-Paths.md", "Requests/Forwarding.md", "Requests/Query-Strings.md", "Requests/Request-Guards.md", "Requests/Cookies.md", "Requests/Format.md", "Requests/Body-Data.md", "Requests/Error-Catchers.md"] }, { "text": "响应 Responses", "children": ["Responses/Responder.md", "Responses/Custom-Responders.md", "Responses/Implementations.md", "Responses/Rocket-Responders.md", "Responses/Templates.md", "Responses/Typed-URIs.md"] }, { "text": "状态 State", "children": ["State/Managed-State.md", "State/Request-Local-State.md", "State/Databases.md"] }, { "text": "整流罩 Fairings", "children": ["Fairings/Overview.md", "Fairings/Implementing.md", "Fairings/Ad-Hoc-Fairings.md"] }, { "text": "测试", "children": ["Testing/Local-Dispatching.md", "Testing/Validating-Responses.md", "Testing/Testing-Hello-World.md", "Testing/Codegen-Debug.md"] }, { "text": "配置", "children": ["Configuration/Environment.md", "Configuration/Rocket.toml.md", "Configuration/Data-Limits.md", "Configuration/Extras.md", "Configuration/Environment-Variables.md", "Configuration/Programmatic.md", "Configuration/Configuring-TLS.md"] }, { "text": "Pastebin 教程", "children": ["Pastebin/Finished-Product.md", "Pastebin/Getting-Started.md", "Pastebin/Index.md", "Pastebin/Uploading.md", "Pastebin/Retrieving-Pastes.md", "Pastebin/Conclusion.md"] }, { "text": "总结", "children": ["Conclusion/Getting-Help.md", "Conclusion/Whats-Next.md"] }] },
    'pagePath': "Responses/Responder.md",
    'layoutPath': "_layout.tsx",
    'outputPath': "Responses/Responder.html",
    'title': "响应器",
    'content': React.createElement("article", { dangerouslySetInnerHTML: {
            __html: '<h1>响应 Responses</h1>\n<p>您可能已经注意到，处理程序的返回类型似乎是任意的，这是因为可以返回实现<a href="https://api.rocket.rs/v0.4/rocket/response/trait.Responder.html"><code>Responder</code></a>特征的任何类型的值，包括您自己的值。在本节中，我们将描述Rocket 的<code>Responder</code>特性以及一些有用<code>Responder</code>的特性。我们还将简要讨论如何实现自己的<code>Responder</code>。</p>\n<h2 id="响应器">响应器<a class="anchor" href="Responses/Responder.html#响应器">§</a></h2>\n<p>实现的类型知道如何<a href="https://api.rocket.rs/v0.4/rocket/response/"><code>Response</code></a>从其值生成a 。阿<code>Response</code>包括一个HTTP状态，标头和主体。主体既可以<em>固定大小</em>或<em>流</em>。给定的<code>Responder</code>实现决定使用哪个。例如，<code>String</code>使用固定大小的主体，而<code>File</code>使用流式响应。响应者可以根据<code>Request</code>他们正在响应的传入来动态调整其响应。</p>\n<p>实现<a href="https://api.rocket.rs/v0.4/rocket/response/trait.Responder.html"><code>Responder</code></a>程序的类型知道如何从其值生成响应。响应<code>Response</code>包括HTTP状态、头和正文。主体可以是固定大小的，也可以是流式的。给定的响应器 <code>Responder</code> 实现决定使用哪个。例如，字符串<code>String</code>使用固定大小的正文，而文件 <code>File</code> 使用流式响应。响应器可以根据其响应的传入请求 <code>Request</code> 动态调整其响应。</p>\n<h3 id="包装">包装<a class="anchor" href="Responses/Responder.html#包装">§</a></h3>\n<p>在描述一些响应器之前，我们注意到响应器通常会<em>包装</em>其他响应器。也就是说，响应器可以采用以下形式，其中<code>R</code>某些类型实现了<code>Responder</code>：</p>\n<pre class="language-rust"><code class="language-rust"><span class="token keyword">struct</span> WrappingResponder<span class="token operator">&lt;</span>R<span class="token operator">></span><span class="token punctuation">(</span>R<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<p>包装响应程序<code>R</code>在用相同响应进行响应之前会修改返回的响应。例如，Rocket <code>Responder</code>在<a href="https://api.rocket.rs/v0.4/rocket/response/status/"><code>status</code>模块</a>中提供，以覆盖包装好的状态代码<code>Responder</code>。例如，<a href="https://api.rocket.rs/v0.4/rocket/response/status/struct.Accepted.html"><code>Accepted</code></a>类型将状态设置为<code>202 - Accepted</code>。可以如下使用：</p>\n<pre class="language-rust"><code class="language-rust"><span class="token keyword">use</span> rocket<span class="token punctuation">::</span>response<span class="token punctuation">::</span>status<span class="token punctuation">;</span>\n\n<span class="token attribute attr-name">#[post(<span class="token string">"/&lt;id>"</span>)]</span>\n<span class="token keyword">fn</span> <span class="token function-definition function">new</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> status<span class="token punctuation">::</span>Accepted<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token punctuation">{</span>\n    status<span class="token punctuation">::</span>Accepted<span class="token punctuation">(</span>Some<span class="token punctuation">(</span><span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">"id: \'{}\'"</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>同样，<a href="https://api.rocket.rs/v0.4/rocket/response/content/"><code>content</code>模块中</a>的类型可用于覆盖响应的Content-Type。例如，要将Content-Type设置<code>&amp;\'static str</code>为JSON，可以使用以下 <a href="https://api.rocket.rs/v0.4/rocket/response/content/struct.Json.html"><code>content::Json</code></a> 类型：</p>\n<pre class="language-rust"><code class="language-rust"><span class="token keyword">use</span> rocket<span class="token punctuation">::</span>response<span class="token punctuation">::</span>content<span class="token punctuation">;</span>\n\n<span class="token attribute attr-name">#[get(<span class="token string">"/"</span>)]</span>\n<span class="token keyword">fn</span> <span class="token function-definition function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> content<span class="token punctuation">::</span>Json<span class="token operator">&lt;</span><span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">\'static</span> str<span class="token operator">></span> <span class="token punctuation">{</span>\n    content<span class="token punctuation">::</span>Json<span class="token punctuation">(</span><span class="token string">"{ \'hi\': \'world\' }"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3 id="警告这与-rocket_contrib中的-json不同">警告：这与 <a href="https://api.rocket.rs/v0.4/rocket_contrib/"><code>rocket_contrib</code></a>中的 <a href="https://api.rocket.rs/v0.4/rocket_contrib/json/struct.Json.html"><code>Json</code></a>不同！<a class="anchor" href="Responses/Responder.html#警告这与-rocket_contrib中的-json不同">§</a></h3>\n<h3 id="错误">错误<a class="anchor" href="Responses/Responder.html#错误">§</a></h3>\n<p>响应器可能会失败；他们不必<em>总是</em>产生回应。相反，他们可以返回<code>Err</code>带有给定状态码的。发生这种情况时，Rocket会将请求转发给<a href="https://rocket.rs/v0.4/guide/requests/#error-catchers">错误捕获器</a>以获取给定的状态码。</p>\n<p>如果已为给定的状态码注册了一个错误捕获器，则Rocket将调用它。捕获器创建并向客户端返回响应。如果未注册任何错误捕获器，并且错误状态代码是标准HTTP状态代码之一，则将使用默认错误捕获器。默认错误捕获器返回带有状态代码和描述的HTML页面。如果没有用于自定义状态代码的捕获器，Rocket将使用<strong>500</strong>错误捕获器返回响应。</p>\n<h3 id="状态">状态<a class="anchor" href="Responses/Responder.html#状态">§</a></h3>\n<p>虽然不鼓励这样做，但也可以通过直接返回<a href="https://api.rocket.rs/v0.4/rocket/response/status/"><code>Status</code></a>来手动将请求转发给捕获器。例如，如果要转发到406：不可接受，您可以写：</p>\n<pre class="language-rust"><code class="language-rust"><span class="token keyword">use</span> rocket<span class="token punctuation">::</span>http<span class="token punctuation">::</span>Status<span class="token punctuation">;</span>\n\n<span class="token attribute attr-name">#[get(<span class="token string">"/"</span>)]</span>\n<span class="token keyword">fn</span> <span class="token function-definition function">just_fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> Status <span class="token punctuation">{</span>\n    Status<span class="token punctuation">::</span>NotAcceptable\n<span class="token punctuation">}</span>\n</code></pre>\n<p>由生成的响应<code>Status</code>取决于状态码本身。如上所述，对于错误状态代码（在[400，599]范围内），<code>Status</code>转发到相应的错误捕获器。下表总结了<code>Status</code>针对这些代码和其他代码生成的响应：</p>\n<table>\n<thead>\n<tr>\n<th><strong>状态码范围</strong></th>\n<th><strong>响应</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[400, 599]</td>\n<td>转发给捕获器以获取给定状态。</td>\n</tr>\n<tr>\n<td>100, [200, 205]</td>\n<td>给定状态为空。</td>\n</tr>\n<tr>\n<td>All others.</td>\n<td>无效。错误传给<code>500</code>错误捕获器。</td>\n</tr>\n</tbody>\n</table>'
        } }),
    'script': React.createElement(React.Fragment, null,
        React.createElement("script", { crossOrigin: "anonymous", src: "https://unpkg.com/react@16.13.1/umd/react.production.min.js" }),
        React.createElement("script", { crossOrigin: "anonymous", src: "https://unpkg.com/react-dom@16.13.1/umd/react-dom.production.min.js" }),
        React.createElement("script", { src: "index.js" })),
    'toc': React.createElement("aside", { dangerouslySetInnerHTML: {
            __html: '<nav class="toc"><ol><li><a href="Responses/Responder.html#响应器">响应器</a><ol><li><a href="Responses/Responder.html#包装">包装</a></li><li><a href="Responses/Responder.html#警告这与-rocket_contrib中的-json不同">警告：这与 rocket_contrib中的 Json不同！</a></li><li><a href="Responses/Responder.html#错误">错误</a></li><li><a href="Responses/Responder.html#状态">状态</a></li></ol></li></ol></nav>'
        } }),
    'layout': "default",
    'id': "Responder"
};
