
export default {
    'sidebar': [{ "text": "Rocket编程指南", "link": "", "pagePath": "README.md" }, { "text": "简介", "children": [{ "text": "读者", "link": "Introduction/Audience.html", "pagePath": "Introduction/Audience.md" }, { "text": "前言", "link": "Introduction/Foreword.html", "pagePath": "Introduction/Foreword.md" }] }, { "text": "快速开始", "children": [{ "text": "运行示例", "link": "Quickstart/Running-Examples.html", "pagePath": "Quickstart/Running-Examples.md" }] }, { "text": "入门", "children": [{ "text": "安装 Rust", "link": "Getting-Started/Installing-Rust.html", "pagePath": "Getting-Started/Installing-Rust.md" }, { "text": "你好，世界！", "link": "Getting-Started/Hello-World.html", "pagePath": "Getting-Started/Hello-World.md" }] }, { "text": "概述", "children": [{ "text": "生命周期", "link": "Overview/Lifecycle.html", "pagePath": "Overview/Lifecycle.md" }, { "text": "路由", "link": "Overview/Routing.html", "pagePath": "Overview/Routing.md" }, { "text": "挂载", "link": "Overview/Mounting.html", "pagePath": "Overview/Mounting.md" }, { "text": "启动", "link": "Overview/Launching.html", "pagePath": "Overview/Launching.md" }] }, { "text": "请求 Requests", "children": [{ "text": "方法", "link": "Requests/Methods.html", "pagePath": "Requests/Methods.md" }, { "text": "动态路径", "link": "Requests/Dynamic-Paths.html", "pagePath": "Requests/Dynamic-Paths.md" }, { "text": "匹配转发", "link": "Requests/Forwarding.html", "pagePath": "Requests/Forwarding.md" }, { "text": "查询字符串", "link": "Requests/Query-Strings.html", "pagePath": "Requests/Query-Strings.md" }, { "text": "请求防护", "link": "Requests/Request-Guards.html", "pagePath": "Requests/Request-Guards.md" }, { "text": "Cookies", "link": "Requests/Cookies.html", "pagePath": "Requests/Cookies.md" }, { "text": "格式", "link": "Requests/Format.html", "pagePath": "Requests/Format.md" }, { "text": "正文数据", "link": "Requests/Body-Data.html", "pagePath": "Requests/Body-Data.md" }, { "text": "你好，世界！", "link": "Requests/Error-Catchers.html", "pagePath": "Requests/Error-Catchers.md" }] }, { "text": "响应 Responses", "children": [{ "text": "响应器", "link": "Responses/Responder.html", "pagePath": "Responses/Responder.md" }, { "text": "自定义响应器", "link": "Responses/Custom-Responders.html", "pagePath": "Responses/Custom-Responders.md" }, { "text": "实现响应器", "link": "Responses/Implementations.html", "pagePath": "Responses/Implementations.md" }, { "text": "Rocket响应器", "link": "Responses/Rocket-Responders.html", "pagePath": "Responses/Rocket-Responders.md" }, { "text": "模板", "link": "Responses/Templates.html", "pagePath": "Responses/Templates.md" }, { "text": "类型化Uri", "link": "Responses/Typed-URIs.html", "pagePath": "Responses/Typed-URIs.md" }] }, { "text": "状态 State", "children": [{ "text": "管理状态", "link": "State/Managed-State.html", "pagePath": "State/Managed-State.md" }, { "text": "请求本地状态", "link": "State/Request-Local-State.html", "pagePath": "State/Request-Local-State.md" }, { "text": "数据库", "link": "State/Databases.html", "pagePath": "State/Databases.md" }] }, { "text": "整流罩 Fairings", "children": [{ "text": "概述", "link": "Fairings/Overview.html", "pagePath": "Fairings/Overview.md" }, { "text": "实现", "link": "Fairings/Implementing.html", "pagePath": "Fairings/Implementing.md" }, { "text": "临时 Fairings", "link": "Fairings/Ad-Hoc-Fairings.html", "pagePath": "Fairings/Ad-Hoc-Fairings.md" }] }, { "text": "测试", "children": [{ "text": "本地调试", "link": "Testing/Local-Dispatching.html", "pagePath": "Testing/Local-Dispatching.md" }, { "text": "验证响应", "link": "Testing/Validating-Responses.html", "pagePath": "Testing/Validating-Responses.md" }, { "text": "测试 Hello World！", "link": "Testing/Testing-Hello-World.html", "pagePath": "Testing/Testing-Hello-World.md" }, { "text": "代码生成调试", "link": "Testing/Codegen-Debug.html", "pagePath": "Testing/Codegen-Debug.md" }] }, { "text": "配置", "children": [{ "text": "环境", "link": "Configuration/Environment.html", "pagePath": "Configuration/Environment.md" }, { "text": "Rocket配置文件", "link": "Configuration/Rocket.toml.html", "pagePath": "Configuration/Rocket.toml.md" }, { "text": "数据限制", "link": "Configuration/Data-Limits.html", "pagePath": "Configuration/Data-Limits.md" }, { "text": "附加功能", "link": "Configuration/Extras.html", "pagePath": "Configuration/Extras.md" }, { "text": "环境变量", "link": "Configuration/Environment-Variables.html", "pagePath": "Configuration/Environment-Variables.md" }, { "text": "程式化", "link": "Configuration/Programmatic.html", "pagePath": "Configuration/Programmatic.md" }, { "text": "配置TLS", "link": "Configuration/Configuring-TLS.html", "pagePath": "Configuration/Configuring-TLS.md" }] }, { "text": "Pastebin 教程", "children": [{ "text": "成品", "link": "Pastebin/Finished-Product.html", "pagePath": "Pastebin/Finished-Product.md" }, { "text": "入门", "link": "Pastebin/Getting-Started.html", "pagePath": "Pastebin/Getting-Started.md" }, { "text": "主页", "link": "Pastebin/Index.html", "pagePath": "Pastebin/Index.md" }, { "text": "上传", "link": "Pastebin/Uploading.html", "pagePath": "Pastebin/Uploading.md" }, { "text": "检索粘贴", "link": "Pastebin/Retrieving-Pastes.html", "pagePath": "Pastebin/Retrieving-Pastes.md" }, { "text": "总结", "link": "Pastebin/Conclusion.html", "pagePath": "Pastebin/Conclusion.md" }] }, { "text": "总结", "children": [{ "text": "获取帮助", "link": "Conclusion/Getting-Help.html", "pagePath": "Conclusion/Getting-Help.md" }, { "text": "下一步是什么？", "link": "Conclusion/Whats-Next.html", "pagePath": "Conclusion/Whats-Next.md" }] }],
    'prev': { "text": "请求防护", "link": "Requests/Request-Guards.html", "pagePath": "Requests/Request-Guards.md" },
    'next': { "text": "格式", "link": "Requests/Format.html", "pagePath": "Requests/Format.md" },
    'config': { "srcDir": "source/_posts", "outDir": "dist", "exclude": ["**/.*", "markdoc.config.json", "LICENSE", "dist"], "baseDir": "/rocketdoc/", "watch": false, "serve": true, "addr": "127.0.0.1:8096", "title": "ROCKET指南", "nav": [{ "text": "首页", "link": "" }], "sidebar": ["README.md", { "text": "简介", "children": ["Introduction/Audience.md", "Introduction/Foreword.md"] }, { "text": "快速开始", "children": ["Quickstart/Running-Examples.md"] }, { "text": "入门", "children": ["Getting-Started/Installing-Rust.md", "Getting-Started/Hello-World.md"] }, { "text": "概述", "children": ["Overview/Lifecycle.md", "Overview/Routing.md", "Overview/Mounting.md", "Overview/Launching.md"] }, { "text": "请求 Requests", "children": ["Requests/Methods.md", "Requests/Dynamic-Paths.md", "Requests/Forwarding.md", "Requests/Query-Strings.md", "Requests/Request-Guards.md", "Requests/Cookies.md", "Requests/Format.md", "Requests/Body-Data.md", "Requests/Error-Catchers.md"] }, { "text": "响应 Responses", "children": ["Responses/Responder.md", "Responses/Custom-Responders.md", "Responses/Implementations.md", "Responses/Rocket-Responders.md", "Responses/Templates.md", "Responses/Typed-URIs.md"] }, { "text": "状态 State", "children": ["State/Managed-State.md", "State/Request-Local-State.md", "State/Databases.md"] }, { "text": "整流罩 Fairings", "children": ["Fairings/Overview.md", "Fairings/Implementing.md", "Fairings/Ad-Hoc-Fairings.md"] }, { "text": "测试", "children": ["Testing/Local-Dispatching.md", "Testing/Validating-Responses.md", "Testing/Testing-Hello-World.md", "Testing/Codegen-Debug.md"] }, { "text": "配置", "children": ["Configuration/Environment.md", "Configuration/Rocket.toml.md", "Configuration/Data-Limits.md", "Configuration/Extras.md", "Configuration/Environment-Variables.md", "Configuration/Programmatic.md", "Configuration/Configuring-TLS.md"] }, { "text": "Pastebin 教程", "children": ["Pastebin/Finished-Product.md", "Pastebin/Getting-Started.md", "Pastebin/Index.md", "Pastebin/Uploading.md", "Pastebin/Retrieving-Pastes.md", "Pastebin/Conclusion.md"] }, { "text": "总结", "children": ["Conclusion/Getting-Help.md", "Conclusion/Whats-Next.md"] }] },
    'pagePath': "Requests/Cookies.md",
    'layoutPath': "_layout.tsx",
    'outputPath': "Requests/Cookies.html",
    'title': "Cookies",
    'content': React.createElement("article", { dangerouslySetInnerHTML: {
            __html: '<h2 id="cookies">Cookies<a class="anchor" href="Requests/Cookies.html#cookies">§</a></h2>\n<p><a href="https://api.rocket.rs/rocket/http/enum.Cookies.html"><code>Cookies</code></a> 是一个重要的内建的请求警卫：你可以获取，设置，和删除cookies。因为<code>Cookies</code>是一个请求警卫，因此Cookies的类型可以作为处理器的参数：</p>\n<pre class="language-rust"><code class="language-rust"><span class="token keyword">use</span> rocket<span class="token punctuation">::</span>http<span class="token punctuation">::</span>Cookies<span class="token punctuation">;</span>\n\n<span class="token attribute attr-name">#[get(<span class="token string">"/"</span>)]</span>\n<span class="token keyword">fn</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span>cookies<span class="token punctuation">:</span> Cookies<span class="token punctuation">)</span> <span class="token punctuation">-></span> Option<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token punctuation">{</span>\n    cookies<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>value<span class="token closure-punctuation punctuation">|</span></span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">"Message: {}"</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>因此cookise可以在处理器中使用。上面的例子中，获取了cookies中的<code>message</code>信息。<code>Cookies</code>警卫也可以设置或者删除cookies信息。GitHub上的<a href="https://github.com/SergioBenitez/Rocket/tree/v0.3.17/examples/cookies">cookies例子</a>说明了更多是用<code>Cookies</code>类型操作cookies的方法，同时<a href="https://api.rocket.rs/rocket/http/enum.Cookies.html"><code>Cookies</code></a> 文档包含了所有的使用方法。</p>\n<h3 id="加密cookies">加密Cookies<a class="anchor" href="Requests/Cookies.html#加密cookies">§</a></h3>\n<p>通过<a href="https://api.rocket.rs/rocket/http/enum.Cookies.html#method.add"><code>Cookies::add()</code></a> 方法添加cookies是*“显而易见的”<em>，所有的值都能被客户端看到。对于敏感数据，Pocket提供了</em>加密*cookies。</p>\n<p>加密cookies和常规的cookies类似，只是经过了认证模式加密，认证模式加密同时提供了机密性，完成行，和真实性。这意味着加密cookies不能被客户检查，篡改或制造。 如果您愿意，可以将加密cookies视为签名和加密。</p>\n<p>加密cookies的获取，添加，和删除的API和常规的相同，只是方法末尾多了<code>_private</code>。分别是：<a href="https://api.rocket.rs/rocket/http/enum.Cookies.html#method.get_private"><code>get_private</code></a>，<a href="https://api.rocket.rs/rocket/http/enum.Cookies.html#method.add_private"><code>add_private</code></a>，和 <a href="https://api.rocket.rs/rocket/http/enum.Cookies.html#method.remove_private"><code>remove_private</code></a>。使用的例子如下：</p>\n<pre class="language-rust"><code class="language-rust"><span class="token comment">/// Retrieve the user\'s ID, if any.</span>\n<span class="token attribute attr-name">#[get(<span class="token string">"/user_id"</span>)]</span>\n<span class="token keyword">fn</span> <span class="token function-definition function">user_id</span><span class="token punctuation">(</span>cookies<span class="token punctuation">:</span> Cookies<span class="token punctuation">)</span> <span class="token punctuation">-></span> Option<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token punctuation">{</span>\n    cookies<span class="token punctuation">.</span><span class="token function">get_private</span><span class="token punctuation">(</span><span class="token string">"user_id"</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>cookie<span class="token closure-punctuation punctuation">|</span></span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">"User ID: {}"</span><span class="token punctuation">,</span> cookie<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/// Remove the `user_id` cookie.</span>\n<span class="token attribute attr-name">#[post(<span class="token string">"/logout"</span>)]</span>\n<span class="token keyword">fn</span> <span class="token function-definition function">logout</span><span class="token punctuation">(</span><span class="token keyword">mut</span> cookies<span class="token punctuation">:</span> Cookies<span class="token punctuation">)</span> <span class="token punctuation">-></span> Flash<span class="token operator">&lt;</span>Redirect<span class="token operator">></span> <span class="token punctuation">{</span>\n    cookies<span class="token punctuation">.</span><span class="token function">remove_private</span><span class="token punctuation">(</span>Cookie<span class="token punctuation">::</span><span class="token function">named</span><span class="token punctuation">(</span><span class="token string">"user_id"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    Flash<span class="token punctuation">::</span><span class="token function">success</span><span class="token punctuation">(</span>Redirect<span class="token punctuation">::</span><span class="token function">to</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Successfully logged out."</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3 id="密匙">密匙<a class="anchor" href="Requests/Cookies.html#密匙">§</a></h3>\n<p>Rocket使用256bit的密匙加密cookies，密匙在配置参数<code>secret_key</code>中指定。如果不指定，Rocket会自动生成一个新密匙。需要注意的是，加密cookie的解密密匙必须和加密密匙相同才能解密。因此，如果当程序重启之后还要正确解密之前加密的cookie，就必须在配置中指定<code>secret_key</code>。如果在正式环境中程序启动时发现配置中没有指定<code>secret_key</code>，Rocket会发出一个警告。</p>\n<p>通常使用<code>openssl</code>之类的工具来生成合适的<code>secret_key</code>。<code>openssl</code>生成一个256bit的base64密匙使用命令<code>openssl rand -base64 32</code>。</p>\n<p>关于配置的更多信息，请看本指南的 <a href="/rocketdoc/Configuration/Environment.html">配置</a> 这一节。</p>\n<h3 id="一次一个">一次一个<a class="anchor" href="Requests/Cookies.html#一次一个">§</a></h3>\n<p>为了安全起见，目前Rocket要求在同一时间最多只能有一个活跃的Cookies实例。多个Cookies实例的情况并不常见，但是一旦遇到，处理器就会不知所措。</p>\n<p>如果真的出现，Roocket会在console里输出如下信息：</p>\n<pre class="language-autoit"><code class="language-autoit"><span class="token operator">=</span><span class="token operator">></span> Error<span class="token punctuation">:</span> Multiple `Cookies` instances are active at once<span class="token punctuation">.</span>\n<span class="token operator">=</span><span class="token operator">></span> An instance of `Cookies` must be dropped before another can be retrieved<span class="token punctuation">.</span>\n<span class="token operator">=</span><span class="token operator">></span> Warning<span class="token punctuation">:</span> The retrieved `Cookies` instance will be empty<span class="token punctuation">.</span>\n</code></pre>\n<p>当违反这个规则调用处理器时，就会输出上述日志。解决这个问题只能是调用处理器的时候，保证统一时间只能有一个Cookies。大家共同容易犯的一个错误是，同时使用Cookies警卫和Custom警卫，并且通过Custom警卫又获取了一次Cookies。如下：</p>\n<pre class="language-rust"><code class="language-rust"><span class="token attribute attr-name">#[get(<span class="token string">"/"</span>)]</span>\n<span class="token keyword">fn</span> <span class="token function-definition function">bad</span><span class="token punctuation">(</span>cookies<span class="token punctuation">:</span> Cookies<span class="token punctuation">,</span> custom<span class="token punctuation">:</span> Custom<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">..</span> <span class="token punctuation">}</span>\n</code></pre>\n<p>因为首先验证Cookies警卫，之后在Custom警卫里再次获取Cookies实例的时候，已经存在一个Cookies了。\n这个方案可以简单的通过调换警卫的顺序实现：</p>\n<pre class="language-rust"><code class="language-rust"><span class="token attribute attr-name">#[get(<span class="token string">"/"</span>)]</span>\n<span class="token keyword">fn</span> <span class="token function-definition function">good</span><span class="token punctuation">(</span>custom<span class="token punctuation">:</span> Custom<span class="token punctuation">,</span> cookies<span class="token punctuation">:</span> Cookies<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">..</span> <span class="token punctuation">}</span>\n</code></pre>'
        } }),
    'script': React.createElement(React.Fragment, null,
        React.createElement("script", { crossOrigin: "anonymous", src: "https://unpkg.com/react@16.13.1/umd/react.production.min.js" }),
        React.createElement("script", { crossOrigin: "anonymous", src: "https://unpkg.com/react-dom@16.13.1/umd/react-dom.production.min.js" }),
        React.createElement("script", { src: "index.js" })),
    'toc': React.createElement("aside", { dangerouslySetInnerHTML: {
            __html: '<nav class="toc"><ol><li><a href="Requests/Cookies.html#cookies">Cookies</a><ol><li><a href="Requests/Cookies.html#加密cookies">加密Cookies</a></li><li><a href="Requests/Cookies.html#密匙">密匙</a></li><li><a href="Requests/Cookies.html#一次一个">一次一个</a></li></ol></li></ol></nav>'
        } }),
    'layout': "default",
    'id': "Cookies"
};
